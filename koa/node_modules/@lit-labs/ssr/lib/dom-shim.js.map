{"version":3,"file":"dom-shim.js","sourceRoot":"","sources":["../src/lib/dom-shim.ts"],"names":[],"mappings":"AAAA;;;;GAIG;AAEH;;;;;;GAMG;AAEH,OAAO,KAAK,MAAM,YAAY,CAAC;AAC/B,OAAO,EACL,WAAW,EACX,OAAO,EACP,qBAAqB,GACtB,MAAM,wBAAwB,CAAC;AAEhC;;;;;;;;;GASG;AACH,MAAM,CAAC,MAAM,SAAS,GAAG,CAAC,EACxB,iBAAiB,GAAG,KAAK,EACzB,KAAK,GAAG,EAAE,GACX,EAA4B,EAAE;IAC7B,MAAM,UAAU;KAAG;IAEnB,MAAM,QAAQ;QACZ,IAAI,kBAAkB;YACpB,OAAO,EAAE,CAAC;QACZ,CAAC;QACD,gBAAgB;YACd,OAAO,EAAE,CAAC;QACZ,CAAC;QACD,cAAc;YACZ,OAAO,EAAE,CAAC;QACZ,CAAC;QACD,aAAa;YACX,OAAO,EAAE,CAAC;QACZ,CAAC;KACF;IAED,MAAM,aAAa;QACjB,OAAO,KAAI,CAAC;KACb;IAED,MAAM,MAAM,GAAG;QACb,OAAO;QACP,WAAW;QACX,QAAQ;QACR,QAAQ,EAAE,IAAI,QAAQ,EAAE;QACxB,aAAa;QACb,UAAU;QACV,qBAAqB;QACrB,cAAc,EAAE,IAAI,qBAAqB,EAAE;QAC3C,IAAI,CAAC,CAAS;YACZ,OAAO,MAAM,CAAC,IAAI,CAAC,CAAC,EAAE,QAAQ,CAAC,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC;QACrD,CAAC;QACD,KAAK,EAAE,CAAC,GAAQ,EAAE,IAAQ,EAAE,EAAE;QAC5B,yEAAyE;QACzE,aAAa;QACb,KAAK,CAAC,GAA6C,EAAE,IAAI,CAAC;QAE5D,QAAQ,EAAE,IAAI,GAAG,CAAC,kBAAkB,CAAC;QACrC,gBAAgB,EAAE;YAChB,OAAO,KAAI,CAAC;SACb;QAED,wBAAwB;QACxB,qBAAqB,KAAI,CAAC;QAE1B,YAAY;QACZ,MAAM,EAAE,SAAoB;QAE5B,wCAAwC;QACxC,GAAG,KAAK;KACT,CAAC;IAEF,IAAI,iBAAiB,EAAE,CAAC;QACtB,MAAM,CAAC,MAAM,CAAC,MAAM,EAAE;YACpB,wBAAwB;YACxB,UAAU,KAAI,CAAC;YACf,YAAY,KAAI,CAAC;YACjB,0BAA0B;YAC1B,MAAM;YACN,GAAG;YACH,eAAe;YACf,OAAO,EAAE;gBACP,GAAG,CAAC,GAAG,IAAe;oBACpB,OAAO,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,CAAC;gBACvB,CAAC;gBACD,IAAI,CAAC,GAAG,IAAe;oBACrB,OAAO,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC,CAAC;gBACxB,CAAC;gBACD,IAAI,CAAC,GAAG,IAAe;oBACrB,OAAO,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC,CAAC;gBACxB,CAAC;gBACD,KAAK,CAAC,GAAG,IAAe;oBACtB,OAAO,CAAC,KAAK,CAAC,GAAG,IAAI,CAAC,CAAC;gBACzB,CAAC;gBACD,KAAK,CAAC,GAAG,IAAe;oBACtB,OAAO,CAAC,KAAK,CAAC,GAAG,IAAI,CAAC,CAAC;gBACzB,CAAC;gBACD,MAAM,CAAC,IAAa,EAAE,GAAW;oBAC/B,IAAI,CAAC,IAAI,EAAE,CAAC;wBACV,MAAM,IAAI,KAAK,CAAC,GAAG,CAAC,CAAC;oBACvB,CAAC;gBACH,CAAC;aACF;SACF,CAAC,CAAC;IACL,CAAC;IAED,OAAO,MAAM,CAAC;AAChB,CAAC,CAAC;AAEF,MAAM,CAAC,MAAM,qBAAqB,GAAG,CAAC,QAAkC,EAAE,EAAE,EAAE;IAC5E,sDAAsD;IACtD,IAAI,UAAU,CAAC,MAAM,KAAK,SAAS,EAAE,CAAC;QACpC,MAAM,MAAM,GAAG,SAAS,CAAC,EAAC,KAAK,EAAC,CAAC,CAAC;QAClC,6CAA6C;QAC7C,MAAM,CAAC,MAAM,CAAC,UAAU,EAAE,MAAM,CAAC,CAAC;IACpC,CAAC;AACH,CAAC,CAAC","sourcesContent":["/**\n * @license\n * Copyright 2019 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\n\n/**\n * This module *minimally* implements the DOM interfaces needed for lit-html and\n * LitElement to boot. Since most of the implementation of lit-html and\n * LitElement are not actually used, we mostly just need to defining base\n * classes for extension, etc. We will have a roughly functioning\n * CustomElementRegistry however.\n */\n\nimport fetch from 'node-fetch';\nimport {\n  HTMLElement,\n  Element,\n  CustomElementRegistry,\n} from '@lit-labs/ssr-dom-shim';\n\n/**\n * Constructs a fresh instance of the \"window\" vm context to use for evaluating\n * user SSR code. Includes a minimal shim of DOM APIs.\n *\n * @param includeJSBuiltIns Whether certain standard JS context globals like\n *  `console` and `setTimeout` should also be added to the global. Should\n *  generally only be true when adding window to a fresh VM context that\n *  starts with nothing.\n * @param props Additional properties to add to the window global\n */\nexport const getWindow = ({\n  includeJSBuiltIns = false,\n  props = {},\n}): {[key: string]: unknown} => {\n  class ShadowRoot {}\n\n  class Document {\n    get adoptedStyleSheets() {\n      return [];\n    }\n    createTreeWalker() {\n      return {};\n    }\n    createTextNode() {\n      return {};\n    }\n    createElement() {\n      return {};\n    }\n  }\n\n  class CSSStyleSheet {\n    replace() {}\n  }\n\n  const window = {\n    Element,\n    HTMLElement,\n    Document,\n    document: new Document(),\n    CSSStyleSheet,\n    ShadowRoot,\n    CustomElementRegistry,\n    customElements: new CustomElementRegistry(),\n    btoa(s: string) {\n      return Buffer.from(s, 'binary').toString('base64');\n    },\n    fetch: (url: URL, init: {}) =>\n      // TODO(aomarks) The typings from node-fetch are wrong because they don't\n      // allow URL.\n      fetch(url as unknown as Parameters<typeof fetch>[0], init),\n\n    location: new URL('http://localhost'),\n    MutationObserver: class {\n      observe() {}\n    },\n\n    // No-op any async tasks\n    requestAnimationFrame() {},\n\n    // Set below\n    window: undefined as unknown,\n\n    // User-provided globals, like `require`\n    ...props,\n  };\n\n  if (includeJSBuiltIns) {\n    Object.assign(window, {\n      // No-op any async tasks\n      setTimeout() {},\n      clearTimeout() {},\n      // Required for node-fetch\n      Buffer,\n      URL,\n      URLSearchParams,\n      console: {\n        log(...args: unknown[]) {\n          console.log(...args);\n        },\n        info(...args: unknown[]) {\n          console.info(...args);\n        },\n        warn(...args: unknown[]) {\n          console.warn(...args);\n        },\n        debug(...args: unknown[]) {\n          console.debug(...args);\n        },\n        error(...args: unknown[]) {\n          console.error(...args);\n        },\n        assert(bool: unknown, msg: string) {\n          if (!bool) {\n            throw new Error(msg);\n          }\n        },\n      },\n    });\n  }\n\n  return window;\n};\n\nexport const installWindowOnGlobal = (props: {[key: string]: unknown} = {}) => {\n  // Avoid installing the DOM shim if one already exists\n  if (globalThis.window === undefined) {\n    const window = getWindow({props});\n    // Copy initial window globals to node global\n    Object.assign(globalThis, window);\n  }\n};\n"]}