{"version":3,"file":"module-loader.js","sourceRoot":"","sources":["../src/lib/module-loader.ts"],"names":[],"mappings":"AAAA;;;;GAIG;AAEH,OAAO,KAAK,IAAI,MAAM,MAAM,CAAC;AAC7B,OAAO,EAAC,QAAQ,IAAI,EAAE,EAAC,MAAM,IAAI,CAAC;AAClC,OAAO,EAAC,aAAa,EAAE,aAAa,EAAC,MAAM,KAAK,CAAC;AACjD,OAAO,KAAK,EAAE,MAAM,IAAI,CAAC;AACzB,OAAO,eAAe,MAAM,kBAAkB,CAAC;AAC/C,OAAO,EAAC,cAAc,EAAC,MAAM,QAAQ,CAAC;AAEtC,MAAM,QAAQ,GAAG,IAAI,GAAG,CAAC,cAAc,CAAC,CAAC;AAEzC,MAAM,gBAAgB,GAAG,CAAC,SAAiB,EAAE,KAAa,EAAE,EAAE,CAC5D,SAAS,KAAK,KAAK,IAAI,SAAS,CAAC,UAAU,CAAC,KAAK,GAAG,GAAG,CAAC,CAAC;AAE3D;;;GAGG;AACH,MAAM,UAAU,GAAG,OAAO,CAAC;AAE3B;;;;;;GAMG;AACH,MAAM,UAAU,wBAAwB;IACtC,6EAA6E;IAC7E,iCAAiC;IACjC,EAAE;IACF,6EAA6E;IAC7E,iEAAiE;IACjE,MAAM,GAAG,GAA+B;QACtC,eAAe;QACf,UAAU;QACV,WAAW;QACX,YAAY;QACZ,aAAa;QACb,OAAO,EAAE;YACP,MAAM,EAAE,CAAC,GAAG,IAAI,EAAE,EAAE,CAAC,OAAO,CAAC,MAAM,CAAC,GAAG,IAAI,CAAC;YAC5C,KAAK,EAAE,CAAC,GAAG,IAAI,EAAE,EAAE,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,IAAI,CAAC;YAC1C,KAAK,EAAE,CAAC,GAAG,IAAI,EAAE,EAAE,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,IAAI,CAAC;YAC1C,UAAU,EAAE,CAAC,GAAG,IAAI,EAAE,EAAE,CAAC,OAAO,CAAC,UAAU,CAAC,GAAG,IAAI,CAAC;YACpD,KAAK,EAAE,CAAC,GAAG,IAAI,EAAE,EAAE,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,IAAI,CAAC;YAC1C,GAAG,EAAE,CAAC,GAAG,IAAI,EAAE,EAAE,CAAC,OAAO,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC;YACtC,MAAM,EAAE,CAAC,GAAG,IAAI,EAAE,EAAE,CAAC,OAAO,CAAC,MAAM,CAAC,GAAG,IAAI,CAAC;YAC5C,KAAK,EAAE,CAAC,GAAG,IAAI,EAAE,EAAE,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,IAAI,CAAC;YAC1C,KAAK,EAAE,CAAC,GAAG,IAAI,EAAE,EAAE,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,IAAI,CAAC;YAC1C,cAAc,EAAE,CAAC,GAAG,IAAI,EAAE,EAAE,CAAC,OAAO,CAAC,cAAc,CAAC,GAAG,IAAI,CAAC;YAC5D,QAAQ,EAAE,CAAC,GAAG,IAAI,EAAE,EAAE,CAAC,OAAO,CAAC,QAAQ,CAAC,GAAG,IAAI,CAAC;YAChD,IAAI,EAAE,CAAC,GAAG,IAAI,EAAE,EAAE,CAAC,OAAO,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC;YACxC,GAAG,EAAE,CAAC,GAAG,IAAI,EAAE,EAAE,CAAC,OAAO,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC;YACtC,OAAO,EAAE,CAAC,GAAG,IAAI,EAAE,EAAE,CAAC,OAAO,CAAC,OAAO,CAAC,GAAG,IAAI,CAAC;YAC9C,UAAU,EAAE,CAAC,GAAG,IAAI,EAAE,EAAE,CAAC,OAAO,CAAC,UAAU,CAAC,GAAG,IAAI,CAAC;YACpD,KAAK,EAAE,CAAC,GAAG,IAAI,EAAE,EAAE,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,IAAI,CAAC;YAC1C,IAAI,EAAE,CAAC,GAAG,IAAI,EAAE,EAAE,CAAC,OAAO,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC;YACxC,OAAO,EAAE,CAAC,GAAG,IAAI,EAAE,EAAE,CAAC,OAAO,CAAC,OAAO,CAAC,GAAG,IAAI,CAAC;YAC9C,OAAO,EAAE,CAAC,GAAG,IAAI,EAAE,EAAE,CAAC,OAAO,CAAC,OAAO,CAAC,GAAG,IAAI,CAAC;YAC9C,SAAS,EAAE,CAAC,GAAG,IAAI,EAAE,EAAE,CAAC,OAAO,CAAC,SAAS,CAAC,GAAG,IAAI,CAAC;YAClD,KAAK,EAAE,CAAC,GAAG,IAAI,EAAE,EAAE,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,IAAI,CAAC;YAC1C,IAAI,EAAE,CAAC,GAAG,IAAI,EAAE,EAAE,CAAC,OAAO,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC;SACvB;QACnB,cAAc;QACd,WAAW,EAAE;YACX,UAAU,EAAE,CAAC,GAAG,IAAI,EAAE,EAAE,CAAC,WAAW,CAAC,UAAU,CAAC,GAAG,IAAI,CAAC;YACxD,aAAa,EAAE,CAAC,GAAG,IAAI,EAAE,EAAE,CAAC,WAAW,CAAC,aAAa,CAAC,GAAG,IAAI,CAAC;YAC9D,oBAAoB,EAAE,CAAC,GAAG,IAAI,EAAE,EAAE,CAChC,WAAW,CAAC,oBAAoB,CAAC,GAAG,IAAI,CAAC;YAC3C,UAAU,EAAE,CAAC,GAAG,IAAI,EAAE,EAAE,CAAC,WAAW,CAAC,UAAU,CAAC,GAAG,IAAI,CAAC;YACxD,gBAAgB,EAAE,CAAC,GAAG,IAAI,EAAE,EAAE,CAAC,WAAW,CAAC,gBAAgB,CAAC,GAAG,IAAI,CAAC;YACpE,gBAAgB,EAAE,CAAC,GAAG,IAAI,EAAE,EAAE,CAAC,WAAW,CAAC,gBAAgB,CAAC,GAAG,IAAI,CAAC;YACpE,IAAI,EAAE,CAAC,GAAG,IAAI,EAAE,EAAE,CAAC,WAAW,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC;YAC5C,OAAO,EAAE,CAAC,GAAG,IAAI,EAAE,EAAE,CAAC,WAAW,CAAC,OAAO,CAAC,GAAG,IAAI,CAAC;YAClD,GAAG,EAAE,CAAC,GAAG,IAAI,EAAE,EAAE,CAAC,WAAW,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC;YAC1C,2BAA2B,EAAE,CAAC,GAAG,IAAI,EAAE,EAAE,CACvC,WAAW,CAAC,2BAA2B,CAAC,GAAG,IAAI,CAAC;YAClD,IAAI,UAAU;gBACZ,OAAO,WAAW,CAAC,UAAU,CAAC;YAChC,CAAC;SACoB;QACvB,WAAW;QACX,GAAG;QACH,eAAe;QACf,WAAW;QACX,cAAc;KACf,CAAC;IACF,wDAAwD;IACxD,WAAW;IACX,IAAI,UAAU,CAAC,IAAI,KAAK,SAAS,EAAE,CAAC;QAClC,GAAG,CAAC,IAAI,GAAG,IAAI,CAAC;IAClB,CAAC;IACD,IAAI,UAAU,CAAC,IAAI,KAAK,SAAS,EAAE,CAAC;QAClC,GAAG,CAAC,IAAI,GAAG,IAAI,CAAC;IAClB,CAAC;IACD,WAAW;IACX,IAAI,UAAU,CAAC,eAAe,KAAK,SAAS,EAAE,CAAC;QAC7C,GAAG,CAAC,eAAe,GAAG,eAAe,CAAC;IACxC,CAAC;IACD,WAAW;IACX,IAAI,UAAU,CAAC,KAAK,KAAK,SAAS,EAAE,CAAC;QACnC,GAAG,CAAC,KAAK,GAAG,KAAK,CAAC;IACpB,CAAC;IACD,OAAO,GAAG,CAAC;AACb,CAAC;AAmCD;;;;;;;;;;;;;GAaG;AACH,MAAM,OAAO,YAAY;IAmBvB,2EAA2E;IAC3E,qCAAqC;IACrC,YAAY,OAAiB;QAlB7B,2EAA2E;QAC3E,0DAA0D;QACzC,iBAAY,GAAG,YAAY,CAAC,gBAAgB,EAAE,CAAC;QAIhE;;;;;;;WAOG;QACM,UAAK,GAAG,IAAI,GAAG,EAAwB,CAAC;QAuIzC,6BAAwB,GAAG,KAAK,EACtC,SAAiB,EACjB,iBAA4B,EACR,EAAE;YACtB,MAAM,MAAM,GAAG,MAAM,IAAI,CAAC,YAAY,CACpC,SAAS,EACT,iBAAiB,CAAC,UAAU,CAC7B,CAAC;YACF,OAAO,MAAM,CAAC,MAAmB,CAAC;QACpC,CAAC,CAAC;QAEM,YAAO,GAAG,KAAK,EACrB,SAAiB,EACjB,iBAA4B,EACR,EAAE;YACtB,MAAM,YAAY,GAAG,IAAI,CAAC,aAAa,CAAC,iBAAiB,CAAC,CAAC;YAC3D,MAAM,MAAM,GAAG,MAAM,IAAI,CAAC,WAAW,CAAC,SAAS,EAAE,YAAY,CAAC,CAAC;YAC/D,MAAM,cAAc,GAAG,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,YAAY,CAAC,CAAC;YACpD,IAAI,cAAc,KAAK,SAAS,EAAE,CAAC;gBACjC,cAAc,CAAC,OAAO,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;YAC3C,CAAC;YACD,OAAO,MAAM,CAAC,MAAmB,CAAC;QACpC,CAAC,CAAC;QAxJA,IAAI,CAAC,QAAQ,GAAG,EAAE,CAAC,aAAa,CAC9B,OAAO,EAAE,MAAM,IAAI,wBAAwB,EAAE,CAC9C,CAAC;IACJ,CAAC;IAED;;;OAGG;IACH,KAAK,CAAC,YAAY,CAChB,SAAiB,EACjB,qBAA6B;QAE7B,MAAM,YAAY,GAAG,qBAAqB,CAAC,UAAU,CAAC,SAAS,CAAC;YAC9D,CAAC,CAAC,aAAa,CAAC,qBAAqB,CAAC;YACtC,CAAC,CAAC,qBAAqB,CAAC;QAC1B,MAAM,MAAM,GAAG,MAAM,IAAI,CAAC,WAAW,CAAC,SAAS,EAAE,YAAY,CAAC,CAAC;QAC/D,MAAM,MAAM,GAAG,MAAM,CAAC,MAAmB,CAAC;QAC1C,IAAI,MAAM,CAAC,MAAM,KAAK,UAAU,EAAE,CAAC;YACjC,MAAM,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;QAClC,CAAC;QACD,IAAI,MAAM,CAAC,MAAM,KAAK,WAAW,EAAE,CAAC;YAClC,MAAM,MAAM,CAAC,QAAQ,EAAE,CAAC;QAC1B,CAAC;QACD,OAAO,MAAM,CAAC;IAChB,CAAC;IAED;;;;;;;OAOG;IACK,KAAK,CAAC,WAAW,CACvB,SAAiB,EACjB,YAAoB;QAEpB,IAAI,QAAQ,CAAC,GAAG,CAAC,SAAS,CAAC,EAAE,CAAC;YAC5B,OAAO,IAAI,CAAC,kBAAkB,CAAC,SAAS,CAAC,CAAC;QAC5C,CAAC;QAED,MAAM,SAAS,GAAG,MAAM,gBAAgB,CAAC,SAAS,EAAE,YAAY,CAAC,CAAC;QAClE,IAAI,SAAS,CAAC,QAAQ,KAAK,OAAO,EAAE,CAAC;YACnC,MAAM,IAAI,KAAK,CAAC,yBAAyB,SAAS,CAAC,QAAQ,EAAE,CAAC,CAAC;QACjE,CAAC;QACD,MAAM,UAAU,GAAG,aAAa,CAAC,SAAS,CAAC,CAAC;QAE5C,oBAAoB;QACpB,IAAI,YAAY,GAAG,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC;QAC9C,IAAI,YAAY,KAAK,SAAS,EAAE,CAAC;YAC/B,OAAO;gBACL,IAAI,EAAE,UAAU;gBAChB,MAAM,EAAE,MAAM,YAAY,CAAC,SAAS;aACrC,CAAC;QACJ,CAAC;QAED,MAAM,aAAa,GAAG,CAAC,KAAK,IAAI,EAAE;YAChC,MAAM,MAAM,GAAG,MAAM,EAAE,CAAC,QAAQ,CAAC,UAAU,EAAE,OAAO,CAAC,CAAC;YACtD,qCAAqC;YACrC,kEAAkE;YAClE,OAAO,IAAI,EAAE,CAAC,gBAAgB,CAAC,MAAM,EAAE;gBACrC,oBAAoB;gBACpB,uBAAuB,EAAE,IAAI,CAAC,wBAAwB;gBACtD,OAAO,EAAE,IAAI,CAAC,QAAQ;gBACtB,UAAU,EAAE,IAAI,CAAC,cAAc,CAAC,UAAU,CAAC;aAC5C,CAAC,CAAC;QACL,CAAC,CAAC,EAAE,CAAC;QAEL,YAAY,GAAG;YACb,IAAI,EAAE,UAAU;YAChB,OAAO,EAAE,EAAE;YACX,SAAS,EAAE,aAAa;SACzB,CAAC;QACF,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,UAAU,EAAE,YAAY,CAAC,CAAC;QACzC,MAAM,MAAM,GAAG,MAAM,aAAa,CAAC;QACnC,4EAA4E;QAC5E,8BAA8B;QAC9B,+EAA+E;QAC/E,MAAM,kBAAkB,GAAG,IAAI,CAAC,aAAa,CAAC,MAAM,CAAC,CAAC;QACtD,MAAM,OAAO,CAAC,GAAG,CACf,MAAM,CAAC,oBAAoB,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,EAAE,CACpC,IAAI,CAAC,WAAW,CAAC,CAAC,EAAE,kBAAkB,CAAC,CACxC,CACF,CAAC;QACF,OAAO;YACL,IAAI,EAAE,UAAU;YAChB,MAAM;SACP,CAAC;IACJ,CAAC;IAEO,KAAK,CAAC,kBAAkB,CAAC,SAAiB;QAChD,IAAI,YAAY,GAAG,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC;QAC7C,IAAI,YAAY,KAAK,SAAS,EAAE,CAAC;YAC/B,OAAO;gBACL,IAAI,EAAE,SAAS;gBACf,MAAM,EAAE,MAAM,YAAY,CAAC,SAAS;aACrC,CAAC;QACJ,CAAC;QACD,uEAAuE;QACvE,uBAAuB;QACvB,MAAM,aAAa,GAAG,CAAC,KAAK,IAAI,EAAE;YAChC,MAAM,GAAG,GAAG,MAAM,MAAM,CAAC,SAAS,CAAC,CAAC;YACpC,OAAO,IAAI,EAAE,CAAC,eAAe,CAC3B,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,EAChB;gBACE,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,OAAO,CAAC,CAAC,GAAG,EAAE,EAAE,CAAC,IAAI,CAAC,SAAS,CAAC,GAAG,EAAE,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;YACnE,CAAC,EACD;gBACE,OAAO,EAAE,IAAI,CAAC,QAAQ;gBACtB,UAAU,EAAE,IAAI,CAAC,qBAAqB,CAAC,SAAS,CAAC;aAClD,CACF,CAAC;QACJ,CAAC,CAAC,EAAE,CAAC;QACL,YAAY,GAAG;YACb,IAAI,EAAE,SAAS;YACf,wEAAwE;YACxE,0CAA0C;YAC1C,OAAO,EAAE,EAAE;YACX,SAAS,EAAE,aAAa;SACzB,CAAC;QACF,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,SAAS,EAAE,YAAY,CAAC,CAAC;QACxC,MAAM,MAAM,GAAG,MAAM,aAAa,CAAC;QACnC,OAAO;YACL,IAAI,EAAE,SAAS;YACf,MAAM;SACP,CAAC;IACJ,CAAC;IA0BO,cAAc,CAAC,UAAkB;QACvC,OAAO,GAAG,UAAU,IAAI,IAAI,CAAC,YAAY,EAAE,CAAC;IAC9C,CAAC;IAEO,qBAAqB,CAAC,SAAiB;QAC7C,OAAO,GAAG,SAAS,IAAI,IAAI,CAAC,YAAY,EAAE,CAAC;IAC7C,CAAC;IAED;;OAEG;IACK,aAAa,CAAC,MAAiB;QACrC,MAAM,EAAC,UAAU,EAAC,GAAG,MAAM,CAAC;QAC5B,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,UAAU,CAAC,EAAE,CAAC;YACjC,MAAM,IAAI,KAAK,CACb,wEAAwE;gBACtE,4DAA4D,CAC/D,CAAC;QACJ,CAAC;QACD,OAAO,UAAU,CAAC,KAAK,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,CAAC;IACzC,CAAC;;AAnMc,6BAAgB,GAAG,CAAC,AAAJ,CAAK;AAsMtC;;;;;;;;GAQG;AACH,MAAM,CAAC,MAAM,gBAAgB,GAAG,KAAK,EACnC,SAAiB,EACjB,YAAoB,EACN,EAAE;IAChB,IAAI,CAAC;QACH,iEAAiE;QAEjE,0EAA0E;QAC1E,uEAAuE;QACvE,6CAA6C;QAC7C,OAAO,IAAI,GAAG,CAAC,SAAS,CAAC,CAAC;IAC5B,CAAC;IAAC,OAAO,CAAC,EAAE,CAAC;QACX,IAAI,YAAY,KAAK,SAAS,EAAE,CAAC;YAC/B,MAAM,IAAI,KAAK,CAAC,2BAA2B,CAAC,CAAC;QAC/C,CAAC;QACD,IACE,gBAAgB,CAAC,SAAS,EAAE,KAAK,CAAC;YAClC,gBAAgB,CAAC,SAAS,EAAE,UAAU,CAAC;YACvC,gBAAgB,CAAC,SAAS,EAAE,aAAa,CAAC;YAC1C,gBAAgB,CAAC,SAAS,EAAE,uBAAuB,CAAC,EACpD,CAAC;YACD,2EAA2E;YAC3E,oBAAoB;YACpB,YAAY,GAAG,aAAa,CAAC,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;QAChD,CAAC;QACD,MAAM,UAAU,GAAG,MAAM,OAAO,CAAC,SAAS,EAAE,IAAI,CAAC,OAAO,CAAC,YAAY,CAAC,EAAE;YACtE,OAAO,EAAE,CAAC,cAAc,CAAC;YACzB,UAAU,EAAE,CAAC,KAAK,CAAC;YACnB,UAAU,EAAE,CAAC,QAAQ,EAAE,aAAa,EAAE,MAAM,CAAC;YAC7C,cAAc,EAAE,CAAC,MAAM,EAAE,QAAQ,EAAE,QAAQ,CAAC;SAC7C,CAAC,CAAC;QACH,OAAO,aAAa,CAAC,UAAU,CAAQ,CAAC;IAC1C,CAAC;AACH,CAAC,CAAC;AAEF;;GAEG;AACH,MAAM,oBAAoB,GAAG,CAAC,IAAmB,EAAE,MAAiB,EAAE,EAAE;IACtE,IAAI,CAAC,GAAG,GAAG,MAAM,CAAC,UAAU,CAAC;AAC/B,CAAC,CAAC;AAEF,MAAM,OAAO,GAAG,KAAK,EACnB,EAAU,EACV,IAAY,EACZ,IAA6C,EAC5B,EAAE;IACnB,MAAM,QAAQ,GAAG,eAAe,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;IAC9C,OAAO,IAAI,OAAO,CAAC,CAAC,GAAG,EAAE,GAAG,EAAE,EAAE;QAC9B,QAAQ,CACN,EAAE,EACF,IAAI,EACJ,EAAE,EACF,EAAE,EACF,CAAC,GAAY,EAAE,QAAqC,EAAE,EAAE;YACtD,IAAI,GAAG,IAAI,IAAI,EAAE,CAAC;gBAChB,GAAG,CAAC,GAAG,CAAC,CAAC;YACX,CAAC;iBAAM,IAAI,QAAQ,KAAK,KAAK,IAAI,OAAO,KAAK,SAAS,EAAE,CAAC;gBACvD,GAAG,CAAC,qBAAqB,EAAE,EAAE,CAAC,CAAC;YACjC,CAAC;iBAAM,CAAC;gBACN,GAAG,CAAC,QAAS,CAAC,CAAC;YACjB,CAAC;QACH,CAAC,CACF,CAAC;IACJ,CAAC,CAAC,CAAC;AACL,CAAC,CAAC","sourcesContent":["/**\n * @license\n * Copyright 2019 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\n\nimport * as path from 'path';\nimport {promises as fs} from 'fs';\nimport {fileURLToPath, pathToFileURL} from 'url';\nimport * as vm from 'vm';\nimport enhancedResolve from 'enhanced-resolve';\nimport {builtinModules} from 'module';\n\nconst builtIns = new Set(builtinModules);\n\nconst specifierMatches = (specifier: string, match: string) =>\n  specifier === match || specifier.startsWith(match + '/');\n\n/**\n * We store Module identifiers as `${modulePath}:${this._vmContextId}`.\n * This regex matches the vm context id.\n */\nconst CONTEXT_ID = /:\\d+$/;\n\n/**\n * Creates a new object that provides a basic set of globals suitable for use as\n * the default context object for a VM module.\n *\n * Note this does not return all default Node globals, rather it returns the\n * subset of Node globals which are also defined in browsers.\n */\nexport function makeDefaultContextObject() {\n  // Everything at or below Node 14 can be always assumed present, since that's\n  // the lowest version we support.\n  //\n  // Note we create new objects for things like console and performance so that\n  // VM contexts can't override the parent context implementations.\n  const ctx: Partial<typeof globalThis> = {\n    // Node 0.10.0+\n    setTimeout,\n    setInterval,\n    clearTimeout,\n    clearInterval,\n    console: {\n      assert: (...args) => console.assert(...args),\n      clear: (...args) => console.clear(...args),\n      count: (...args) => console.count(...args),\n      countReset: (...args) => console.countReset(...args),\n      debug: (...args) => console.debug(...args),\n      dir: (...args) => console.dir(...args),\n      dirxml: (...args) => console.dirxml(...args),\n      error: (...args) => console.error(...args),\n      group: (...args) => console.group(...args),\n      groupCollapsed: (...args) => console.groupCollapsed(...args),\n      groupEnd: (...args) => console.groupEnd(...args),\n      info: (...args) => console.info(...args),\n      log: (...args) => console.log(...args),\n      profile: (...args) => console.profile(...args),\n      profileEnd: (...args) => console.profileEnd(...args),\n      table: (...args) => console.table(...args),\n      time: (...args) => console.time(...args),\n      timeEnd: (...args) => console.timeEnd(...args),\n      timeLog: (...args) => console.timeLog(...args),\n      timeStamp: (...args) => console.timeStamp(...args),\n      trace: (...args) => console.trace(...args),\n      warn: (...args) => console.warn(...args),\n    } as typeof console,\n    // Node 8.5.0+\n    performance: {\n      clearMarks: (...args) => performance.clearMarks(...args),\n      clearMeasures: (...args) => performance.clearMeasures(...args),\n      clearResourceTimings: (...args) =>\n        performance.clearResourceTimings(...args),\n      getEntries: (...args) => performance.getEntries(...args),\n      getEntriesByName: (...args) => performance.getEntriesByName(...args),\n      getEntriesByType: (...args) => performance.getEntriesByType(...args),\n      mark: (...args) => performance.mark(...args),\n      measure: (...args) => performance.measure(...args),\n      now: (...args) => performance.now(...args),\n      setResourceTimingBufferSize: (...args) =>\n        performance.setResourceTimingBufferSize(...args),\n      get timeOrigin() {\n        return performance.timeOrigin;\n      },\n    } as typeof performance,\n    // Node 10+\n    URL,\n    URLSearchParams,\n    // Node 11+\n    queueMicrotask,\n  };\n  // Everything above Node 14 should be set conditionally.\n  // Node 16+\n  if (globalThis.atob !== undefined) {\n    ctx.atob = atob;\n  }\n  if (globalThis.btoa !== undefined) {\n    ctx.btoa = btoa;\n  }\n  // Node 17+\n  if (globalThis.structuredClone !== undefined) {\n    ctx.structuredClone = structuredClone;\n  }\n  // Node 18+\n  if (globalThis.fetch !== undefined) {\n    ctx.fetch = fetch;\n  }\n  return ctx;\n}\n\n// IMPORTANT: We should always use our own VmModule interface for public APIs\n// instead of vm.Module, because vm.Module typings are not provided by\n// @types/node, and we do not augment them in a way that affects consumers (the\n// types in custom_typings are only available during our own build).\n\n/**\n * A subset of the Node vm.Module API.\n */\nexport interface VmModule {\n  /**\n   * The namespace object of the module that provides access to its exports.\n   * See https://nodejs.org/api/vm.html#modulenamespace\n   */\n  namespace: {[name: string]: unknown};\n}\n\nexport interface ModuleRecord {\n  path: string;\n  module?: VmModule;\n  imports: Array<string>;\n  evaluated: Promise<VmModule>;\n}\n\ninterface ImportResult {\n  path: string;\n  module: VmModule;\n}\n\nexport interface Options {\n  global?: object;\n  filesystem?: FileSystem;\n}\n\n/**\n * A JavaScript module loader that utilizes the Node `vm` module\n * (https://nodejs.org/api/vm.html).\n *\n * Most of the hooks implement fairly standard web-compatible module loading:\n *  - An import specifier resolver that uses Node module resolution\n *  - A linker that loads dependencies from the local filesystem\n *  - A module cache keyed by resolved URL\n *  - import.meta.url support\n *  - Dynamic import() that functions the same as static imports\n *\n * There are some behaviors specific to lit-html. Mainly that imports of certain\n * directives are redirected to Node/SSR compatible implementations.\n */\nexport class ModuleLoader {\n  private static _nextVmContextId = 0;\n\n  // This ID is appended to all module identifiers to work around an apparent\n  // v8 bug where duplicate identifiers would cause a crash.\n  private readonly _vmContextId = ModuleLoader._nextVmContextId++;\n\n  private readonly _context: vm.Context;\n\n  /**\n   * TODO (justinfagnani): This is a temporary stand-in for a real graph API.\n   * We want to be able to invalidate a module and the transitive closure\n   * of its importers so that we can update the graph.\n   *\n   * The keys of the map are useful for enumerating static imported modules\n   * after an entrypoint is loaded.\n   */\n  readonly cache = new Map<string, ModuleRecord>();\n\n  // TODO (justinfagnani): Allow passing a filesystem object to allow network\n  // sources, in-memory for tests, etc.\n  constructor(options?: Options) {\n    this._context = vm.createContext(\n      options?.global ?? makeDefaultContextObject()\n    );\n  }\n\n  /**\n   * Imports a module given by `path` into a new VM context with `contextGlobal` as the\n   * global object.\n   */\n  async importModule(\n    specifier: string,\n    referrerPathOrFileUrl: string\n  ): Promise<ImportResult> {\n    const referrerPath = referrerPathOrFileUrl.startsWith('file://')\n      ? fileURLToPath(referrerPathOrFileUrl)\n      : referrerPathOrFileUrl;\n    const result = await this._loadModule(specifier, referrerPath);\n    const module = result.module as vm.Module;\n    if (module.status === 'unlinked') {\n      await module.link(this._linker);\n    }\n    if (module.status !== 'evaluated') {\n      await module.evaluate();\n    }\n    return result;\n  }\n\n  /**\n   * Performs the actual loading of module source from disk, creates the Module\n   * instance, and maintains the module cache. Also loads all dependencies of\n   * the module.\n   *\n   * Used directly by `importModule` and by the linker and dynamic import()\n   * support function.\n   */\n  private async _loadModule(\n    specifier: string,\n    referrerPath: string\n  ): Promise<ImportResult> {\n    if (builtIns.has(specifier)) {\n      return this._loadBuiltInModule(specifier);\n    }\n\n    const moduleURL = await resolveSpecifier(specifier, referrerPath);\n    if (moduleURL.protocol !== 'file:') {\n      throw new Error(`Unsupported protocol: ${moduleURL.protocol}`);\n    }\n    const modulePath = fileURLToPath(moduleURL);\n\n    // Look in the cache\n    let moduleRecord = this.cache.get(modulePath);\n    if (moduleRecord !== undefined) {\n      return {\n        path: modulePath,\n        module: await moduleRecord.evaluated,\n      };\n    }\n\n    const modulePromise = (async () => {\n      const source = await fs.readFile(modulePath, 'utf-8');\n      // TODO: store and re-use cachedData:\n      // https://nodejs.org/api/vm.html#sourcetextmodulecreatecacheddata\n      return new vm.SourceTextModule(source, {\n        initializeImportMeta,\n        importModuleDynamically: this._importModuleDynamically,\n        context: this._context,\n        identifier: this._getIdentifier(modulePath),\n      });\n    })();\n\n    moduleRecord = {\n      path: modulePath,\n      imports: [],\n      evaluated: modulePromise,\n    };\n    this.cache.set(modulePath, moduleRecord);\n    const module = await modulePromise;\n    // Modules must be fully loaded before linking. Therefore `_loadModule` must\n    // also load its dependencies.\n    // Reference: https://tc39.es/ecma262/#table-abstract-methods-of-module-records\n    const moduleReferrerPath = this.getModulePath(module);\n    await Promise.all(\n      module.dependencySpecifiers.map((s) =>\n        this._loadModule(s, moduleReferrerPath)\n      )\n    );\n    return {\n      path: modulePath,\n      module,\n    };\n  }\n\n  private async _loadBuiltInModule(specifier: string): Promise<ImportResult> {\n    let moduleRecord = this.cache.get(specifier);\n    if (moduleRecord !== undefined) {\n      return {\n        path: specifier,\n        module: await moduleRecord.evaluated,\n      };\n    }\n    // Provide basic support for built-in modules (needed for node shims of\n    // DOM APIs like fetch)\n    const modulePromise = (async () => {\n      const mod = await import(specifier);\n      return new vm.SyntheticModule(\n        Object.keys(mod),\n        function () {\n          Object.keys(mod).forEach((key) => this.setExport(key, mod[key]));\n        },\n        {\n          context: this._context,\n          identifier: this._getBuiltInIdentifier(specifier),\n        }\n      );\n    })();\n    moduleRecord = {\n      path: specifier,\n      // TODO (justinfagnani): these imports should be populated in the linker\n      // to record the edges of the module graph\n      imports: [],\n      evaluated: modulePromise,\n    };\n    this.cache.set(specifier, moduleRecord);\n    const module = await modulePromise;\n    return {\n      path: specifier,\n      module,\n    };\n  }\n\n  private _importModuleDynamically = async (\n    specifier: string,\n    referencingModule: vm.Module\n  ): Promise<vm.Module> => {\n    const result = await this.importModule(\n      specifier,\n      referencingModule.identifier\n    );\n    return result.module as vm.Module;\n  };\n\n  private _linker = async (\n    specifier: string,\n    referencingModule: vm.Module\n  ): Promise<vm.Module> => {\n    const referrerPath = this.getModulePath(referencingModule);\n    const result = await this._loadModule(specifier, referrerPath);\n    const referrerModule = this.cache.get(referrerPath);\n    if (referrerModule !== undefined) {\n      referrerModule.imports.push(result.path);\n    }\n    return result.module as vm.Module;\n  };\n\n  private _getIdentifier(modulePath: string) {\n    return `${modulePath}:${this._vmContextId}`;\n  }\n\n  private _getBuiltInIdentifier(specifier: string) {\n    return `${specifier}:${this._vmContextId}`;\n  }\n\n  /**\n   * `getModulePath` returns the file path for a provided module.\n   */\n  private getModulePath(module: vm.Module): string {\n    const {identifier} = module;\n    if (!CONTEXT_ID.test(identifier)) {\n      throw new Error(\n        'Internal error: Unexpected file:// URL identifier without context ID. ' +\n          'Expected identifier in form: \"/packages/lit-element.js:8\".'\n      );\n    }\n    return identifier.split(CONTEXT_ID)[0];\n  }\n}\n\n/**\n * Resolves specifiers using web-ish Node module resolution. Web-compatible full\n * URLs are passed through unmodified. Relative and absolute URLs (starting in\n * `/`, `./`, `../`) are resolved relative to `referrerPath`. \"Bare\" module\n * specifiers are resolved with the 'resolve' package.\n *\n * This replaces some Lit modules with SSR compatible equivalents. This is\n * currently hard-coded, but should instead be done with a configuration object.\n */\nexport const resolveSpecifier = async (\n  specifier: string,\n  referrerPath: string\n): Promise<URL> => {\n  try {\n    // First see if the specifier is a full URL, and if so, use that.\n\n    // TODO: This will mainly be http:// and https:// URLs, which we may _not_\n    // want to support. We probably also want to filter out file:// URLs as\n    // those will be absolute to the file system.\n    return new URL(specifier);\n  } catch (e) {\n    if (referrerPath === undefined) {\n      throw new Error('referrerPath is undefined');\n    }\n    if (\n      specifierMatches(specifier, 'lit') ||\n      specifierMatches(specifier, 'lit-html') ||\n      specifierMatches(specifier, 'lit-element') ||\n      specifierMatches(specifier, '@lit/reactive-element')\n    ) {\n      // Override where we resolve lit packages from so that we always resolve to\n      // a single version.\n      referrerPath = fileURLToPath(import.meta.url);\n    }\n    const modulePath = await resolve(specifier, path.dirname(referrerPath), {\n      modules: ['node_modules'],\n      extensions: ['.js'],\n      mainFields: ['module', 'jsnext:main', 'main'],\n      conditionNames: ['node', 'module', 'import'],\n    });\n    return pathToFileURL(modulePath) as URL;\n  }\n};\n\n/**\n * Web-like import.meta initializer that sets up import.meta.url\n */\nconst initializeImportMeta = (meta: {url: string}, module: vm.Module) => {\n  meta.url = module.identifier;\n};\n\nconst resolve = async (\n  id: string,\n  path: string,\n  opts: Partial<enhancedResolve.ResolveOptions>\n): Promise<string> => {\n  const resolver = enhancedResolve.create(opts);\n  return new Promise((res, rej) => {\n    resolver(\n      {},\n      path,\n      id,\n      {},\n      (err: unknown, resolved?: string | false | undefined) => {\n        if (err != null) {\n          rej(err);\n        } else if (resolved === false || resolve === undefined) {\n          rej(`could not resolve ${id}`);\n        } else {\n          res(resolved!);\n        }\n      }\n    );\n  });\n};\n"]}